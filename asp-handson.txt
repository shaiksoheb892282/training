ASP.Net MVC with Entity Framework #All Handson, 
would suggest to go through all programs and try to learn and understand... 


Ex 1.1 - Controllers and Actions

//Ex1Controller.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace ASP_App1.Controllers               //DO NOT change the namespace name
{
    public class Ex1Controller : Controller  //DO NOT change the class name
    {
        List<String> breakingNews = new List<String>()      //DO NOT change this declaration and values
        {
            "PM visit brings business","10% slash in GST","Top Player announced retirement","India wins series"
        };

        // Implement 'NewsByChoice' action  
        public ActionResult NewsByChoice(int id)
        {
            return Content(breakingNews[id-1]);
        }
        
        // Implement 'AllNews' action
        public ActionResult AllNews(){
            string s="";
            foreach(var i in breakingNews){
                s+=i+"\n";
            }
            return Content(s);
        }
        
    }
}
--------------------------------------------------------------------------

Ex 1.2 Controllers and Actions

//Ex2Controller.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.Web.Routing;

namespace ASP_App1.Controllers            //DO NOT change the namespace name
{
    public class Ex2Controller : Controller     //DO NOT change the class name
    {
        
        // Implement 'Course' action
        public ActionResult Course(int id){
            if(id==1){
                return RedirectToAction("JavaCourse");
            }
            return RedirectToAction("DotNetCourse");
        }
        
        // Implement 'JavaCourse' action
        public ActionResult JavaCourse(){
            return View();
        }
        
        // Implement 'DotNetCourse' action
        public ActionResult DotNetCourse(){
            return View();
        }
    }
}

//DotNetCourse.cshtml
<h1>DotNetCourse</h1>

//JavaCourse.cshtml
<h1>JavaCourse</h1>

--------------------------------------------------------------------------

Ex 2.1 - Working With View Bag

//HomeController.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace ASP_App1.Controllers            //DO NOT change the namespace name
{
    
    public class HomeController : Controller       //DO NOT change the class name
    {

        // DO NOT change the following declaration and values
        String business = "Flipkart";
        String type = "E-commerce";
        int founded = 2007;
        String website = "www.flipkart.com";


        // Implement 'About' action with Route 'flipkart/info'
        [Route("flipkart/info")]
        public ActionResult About(){
            ViewBag.Business = business;
            ViewBag.Type = type;
            ViewBag.Founded = founded;
            ViewBag.Website = website;
            return View();
        }
    }
}

//About.cshtml
<h1>@ViewBag.Business</h1>
<h2>@ViewBag.Type</h2>
<h2>@ViewBag.Founded</h2>
<h2>@ViewBag.Website</h2>

------------------------------------------------------------------------------

//Ex 3.1 Working With Model Binding

//Ex3Controller.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using ASP_App1.Models;


namespace ASP_App1.Controllers       //DO NOT change the namespace name
{
    public class Ex3Controller : Controller         //DO NOT change the class name
    {
        // Implement 'Index' action    
        public ActionResult Index(){
            Course course = new Course();
            course.CourseId = "C101";
            course.CourseName = "Java";
            course.Duration = 40;
            course.Level = "Beginner";
            return RedirectToAction("CourseDescription",course);
        }
        // Implement 'IndexChoice' action
        public ActionResult IndexChoice(int Id){
            if(Id==1){
                return RedirectToAction("Index");
            }
            Department department = new Department();
            department.CourseList = new List<String>{"Java","Dotnet","Python","Ruby"};
            return RedirectToAction("CourseList",department);
        } 
        // Implement 'CourseDescription' action
        public ActionResult CourseDescription(Course course){
            return View(course);
        }
        // Implement 'CourseList' action
        public ActionResult CourseList(Department department){
            return View(department);
        }
    }
}

//Course.cs
// THIS IS FOR REFERENCE ONLY. YOU ARE NOT REQUIRED TO MAKE ANY CHANGES HERE
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace ASP_App1.Models
{
    public class Course
    {
        public String CourseName { get; set; }
        public String  CourseId { get; set; }
        public int  Duration { get; set; }
        public string Level { get; set; }
            
    }

    public class Department
    {
        public List<String> CourseList { get; set; } 
    }
}

//CourseDescription.cshtml
@model ASP_App1.Models.Course
Course Details
<table>
    <tr>
        <td><label>Course ID:</label></td>
        <td><input type="text" id="CourseId" value="@Model.CourseId" /></td>
    </tr>
    <tr>
        <td><label>Course Name:</label></td>
        <td><input type="text" id="CourseName" value="@Model.CourseName" /></td>
    </tr>
    <tr>
        <td><label>Course Duration:</label></td>
        <td><input type="number" id="Duration" value="@Model.Duration" /></td>
    </tr>
    <tr>
        <td><label>Course Level:</label></td>
        <td><input type="text" id="Level" value="@Model.Level" /></td>
    </tr>
</table>

//CourseList.cshtml
@model ASP_App1.Models.Department
<h2>Available Courses</h2>
@foreach(var i in Model.CourseList){
            <p>@i</p>
}

-------------------------------------------------------------------------------

Ex 3.2 Working With Model Binding

//Ex3Controller.cs
using ASP_App1.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace ASP_App1.Controllers           //DO NOT change the namespace name
{
    public class Ex3Controller : Controller       //DO NOT change the class name
    {
        //DO NOT change the below variable declaration and values
         List<ShoppingCart> l1 = new List<ShoppingCart>() {new ShoppingCart("CA1","Shoe",3000,"Sport"),
                                                          new ShoppingCart("CA2", "Shirt", 1500, "Men's Wear"),
                                                          new ShoppingCart("CA3","Watch",4000,"Accessories"),
                                                          new ShoppingCart("CA4","Samsung",15000,"Mobiles")};
        
         // Implement 'Cart' action
         [HttpPost]
         public ActionResult Cart(ShoppingCart cart){
             return View(cart);
         }
        
       // Implement 'Cart' action as Http POST
       [HttpGet]
        public ActionResult Cart(int id){
            ShoppingCart s = l1[id-1];
            return View(s);
        }
    }
}

//ShoppingCart.cs
//THIS IS FOR REFERENCE ONLY. YOU ARE NOT REQUIRED TO MAKE ANY CHANGES HERE
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace ASP_App1.Models
{
    public class ShoppingCart
    {
        public String CartId { get; set; }
        public String  ItemName{ get; set; }
        public int  Price { get; set; }
        public string ItemType { get; set; }
        
        public ShoppingCart(){}
            
        public ShoppingCart(String cartId,String itemName, int price, String itemType)
        {
            this.ItemName = itemName;
            this.CartId = cartId;
            this.Price = price;
            this.ItemType = itemType;
        }
    }
}

//Cart.cshtml
@model ASP_App1.Models.ShoppingCart
<h3>Shopping Cart Details</h3>
@Model.CartId
@Model.ItemName
@Model.Price
@Model.ItemType

------------------------------------------------------------------------

Ex 5-1 Partial View

//ChTrust.cshtml
@Html.Partial("_HeaderNavBar")
<table>
<tr>
    <td><label for="name">Name</label></td>
    <td><input type="text" id="name" /></td>
</tr>
<tr>
    <td><label for="phno">Phone Number</label></td>
    <td><input type="text" id="phno" /></td>
</tr>
<tr>
    <td><label for="donationfor">Donation For</label></td>
    <td><select id="donationfor">
            <option value="Education">Education</option>
    </td>
</tr>
<tr>
    <td><label for="amount">Amount</label></td>
    <td><input type="number" id="amount" /></td>
</tr>
<tr>
    <td><label>Donation Type</label></td>
    <td><input type="radio" name="dtype" id="dtype1" /> One Time Donation
        <input type="radio" name="dtype" id="dtype2" /> Recurring Donation
    </td>
</tr>
<tr>
    <td><button>Proceed</button>
</tr>
</table>
@Html.Partial("_FooterNavBar")

//chTrustController.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace ASP_App1.Controllers          //DO NOT change the namespace name
{
    public class ChTrustController : Controller         //DO NOT change the class name
    {
        // Implement 'ChTrust' action
        public ActionResult ChTrust(){
            return View();
        }
        // Implement 'HeaderNavBar' action 
        public PartialViewResult _HeaderNavBar(){
            return PartialView();
        }
        // Implement 'FooterNavBar' action 
        public PartialViewResult _FooterNavBar(){
            return PartialView();
        }
    }
}

//_HeaderNavBar.cshtml
<h1>Help Our Charity</h1>

//_FooterNavBar.cshtml
<h5 style="text-align:center;">Thank you For Your Support;</h5>

--------------------------------------------------------------------------------

Ex 4-1 Working With HTTP POST

//CourseController.cs
using ASP_App1.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace ASP_App1.Controllers               //DO NOT change the namespace name
{
    public class CourseController : Controller    //DO NOT change the class name
    {
        // Implement 'Course' action
        public ActionResult Course(){
            return View();
        }

       // Implement 'Course' action as Http POST
       [HttpPost]
       public ActionResult Course(Course c){
           return View(c);
       }
    }
}

//Course.cshtml
@model ASP_App1.Models.Course
<h1>Enter New Course Details</h1>
@using(Html.BeginForm(“Course”,	“Course”))
{
				<div	class=“form-group”>
								@Html.LabelFor(m	=>	m.CourseName)
								@Html.TextBoxFor(m	=>	m.CourseName)
				</div>
				<div	class=“form-group”>
								@Html.LabelFor(m	=>	m.CourseId)
								@Html.TextBoxFor(m	=>	m.CourseId)
				</div>
				<div	class=“form-group”>
								@Html.LabelFor(m	=>	m.Duration)
								@Html.TextBoxFor(m	=>	m.Duration)
				</div>
				<div	class=“form-group”>
								@Html.LabelFor(m	=>	m.Level)
								@Html.TextBoxFor(m	=>	m.Level)
				</div>
				<input	type=“submit” value="Submit" />
}	
@if(Model!=null){
<h1>Details of the New Course</h1>
<table>
    <tr>
        <td><label for="name">Course Name</label></td>
        <td><input type="text" id="name" value=@Model.CourseName />
    <tr>
    <tr>
        <td><label for="id">Course Id</label></td>
        <td><input type="text" id="id" value=@Model.CourseId />
    <tr>
    <tr>
        <td><label for="duration">Duration</label></td>
        <td><input type="number" id="duration" value=@Model.Duration />
    <tr>
    <tr>
        <td><label for="level">Level</label></td>
        <td><input type="text" id="level" value=@Model.Level />
    <tr>
</table>
}


//Course.cs
//THIS IS FOR REFERENCE ONLY. YOU ARE NOT REQUIRED TO MAKE ANY CHANGES HERE
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;

namespace ASP_App1.Models
{
    public class Course
    {   [Display(Name="Course Name")]
        public String CourseName { get; set; }
        [Display(Name="Course Id")]
        public String  CourseId{ get; set; }
        public int  Duration { get; set; }
        public string Level { get; set; }
            
    }

}

---------------------------------------------------------------------------

Ex 4-2 Working With HTTP POST

//VehicleController.cs
using ASP_App1.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace ASP_App1.Controllers                      //DO NOT change the namespace name
{
    public class VehicleController : Controller    //DO NOT change the class name
    {
       // Implement 'Registration' action
       public ActionResult Registration(){
           return View();
       }
        // Implement 'Registration' action as Http POST
        [HttpPost]
        public ActionResult Registration(Registration r){
            ViewBag.CustomerName = r.CustomerName;
            ViewBag.VehicleNo = r.VehicleNo;
            ViewBag.PhoneNumber = r.PhoneNumber;
            ViewBag.City = r.City;
            return View("Confirm");
        }
    }
}

//Registration.cshtml
<div style="text-align:center">
    <h1 style="text-decoration:underline;">One Stop Service</h1>
        <form action="Registration" method="post">
        <table style="margin-left: auto; margin-right: auto;">
            <tr>
                <td><label for="name">Customer Name:</label></td>
                <td><input type="text" id="name" name="CustomerName"/></td>
            </tr>
            <tr>
                <td><label for="phno">Phone Number</label></td>
                <td><input type="number" id="phno" name="PhoneNumber"/></td>
            </tr>
            <tr>
                <td><label for="vnumber">Vehicle Number</label></td>
                <td><input type="text" id="vnumber" name="VehicleNo"/></td>
            </tr>
            <tr>
                <td><label for="vmodel">Vehicle Model</label></td>
                <td><input type="text" id="vmodel" name="VehicleModel"/></td>
            </tr>
            <tr>
                <td><label for="city">City</label></td>
                <td><input type="text" id="city" name="City"/></td>
            </tr>
            <tr>
                <td><label>Service Type</label></td>
                <td><input type="radio" name="Servicetype" id="stype1" /> Regular
                    <input type="radio" name="Servicetype" id="stype2" /> Others
                </td>
            </tr>
            <tr>
                <td><input type="submit" value="Confirm" /></td>
                <td><input type="reset" value="Reset" /></td>
            </tr>
        </table>
</form>
</div>

//Confirm.cshtml
<b>Welcome,
<br>
<br>
Your booking for vehicle Number, @ViewBag.VehicleNo was confirmed.
<br>
Our service adviser (@ViewBag.City) will call you in Phone Number : @ViewBag.PhoneNumber</b>

//Registration.cs
//THIS IS FOR REFERENCE ONLY. YOU ARE NOT REQUIRED TO MAKE ANY CHANGES HERE
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace ASP_App1.Models
{
    public class Registration
    {
        public String CustomerName { get; set; }
        public long PhoneNumber { get; set; }
        public string VehicleNo { get; set; }
        public string City { get; set; }
        public string VehicleModel { get; set; }
        public string ServiceType { get; set; }

    }
}

------------------------------------------------------------------------------

Ex 6-2 Entity Framework Integration With ASP MVC

//StudentController.cs
using ASP_EF_App1.DAL;
using ASP_EF_App1.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace ASP_EF_App1.Controllers            //DO NOT change the namespace name
{
    public class StudentController : Controller     //DO NOT change the class name
    {
        public ActionResult Placement()
        {
            /**  DO NOT REMOVE THE BELOW 2 LINES **/
            StudentDAO sd = new StudentDAO();
            sd.AddPlacements();
            /**   END OF 2 LINES  **/
            
            //Implement code here
            CollegeContext context = new CollegeContext();
            List<Placement> listOfPlacements = context.Placements.ToList();
            return View(listOfPlacements);
        }
    }
}

//CollegeContext.cs
using ASP_EF_App1.Models;
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Web;

namespace ASP_EF_App1.DAL         //DO NOT change the namespace name
{
    public class CollegeContext :DbContext          //DO NOT change the class name
    {
        public CollegeContext() : base("CollegeContext")        //DO NOT change the context name
        {
        }
        
        //Implement property for 'Placements' with required declaration
        public DbSet<Placement> Placements {get; set;}
    }
}

//Placement.cs
//THIS IS FOR REFERENCE ONLY. YOU ARE NOT REQUIRED TO MAKE ANY CHANGES HERE
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace ASP_EF_App1.Models
{
    public class Placement
    {
        public int PlacementId { get; set; }
        public int StudentId { get; set; }
        public String StudentName { get; set; }
        public String Company { get; set; }
        public String PlacementYear { get; set; }
    }
}

//Placement.cshtml
@model List<ASP_EF_App1.Models.Placement>
<h3>Students Placement Details</h3>
<table>
        <tr>
            <th>Placement Id</th>
            <th>Student Id</th>
            <th>Student Name</th>
            <th>Company</th>
            <th>Placement Year</th>
        </tr>
        @foreach(var item in Model){
        <tr>
            <td>@item.PlacementId</td>
            <td>@item.StudentId</td>
            <td>@item.StudentName</td>
            <td>@item.Company</td>
            <td>@item.PlacementYear</td>
        </tr>}
</table>

-------------------------------------------------------------------------

Ex 6-3 Entity Framework Integration With ASP MVC - POST

//StudentController.cs
using ASP_EF_App1.DAL;
using ASP_EF_App1.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace ASP_EF_App1.Controllers   //DO NOT change the namespace name
{
    public class StudentController : Controller     //DO NOT change the class name
    {
        
        // Implement 'Index' action. 
        public ActionResult Index(){
            Student student = new Student();
            student.StudentName =  "Johana";
            student.EnrolledDate = DateTime.ParseExact("25-06-2018","dd-MM-yyyy",null);
            student.Department = "Art";
            student.PhoneNumber = 9876565434;
            return RedirectToAction("AddDetail",student);
        }
               
        
        // Implement 'AddDetail' action
        public ActionResult AddDetail(Student student){
            CollegeContext context = new CollegeContext();
            context.Students.Add(student);
            context.SaveChanges();
            return View("ViewDetails",student);
        }
        
    }
}

//CollegeContext.cs
using ASP_EF_App1.Models;
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Web;

namespace ASP_EF_App1.DAL           //DO NOT change the namespace name
{
    public class CollegeContext :DbContext      //DO NOT change the class name
    {
        public CollegeContext() : base("CollegeContext")  //DO NOT change the context name
        {
        }
        
        //Implement property for 'Students' with required declaration
        public DbSet<Student> Students {get; set;}
    }
}

//Student.cs
//THIS IS FOR REFERENCE ONLY. YOU ARE NOT REQUIRED TO MAKE ANY CHANGES HERE
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace ASP_EF_App1.Models
{
    public class Student
    {
        public int StudentId { get; set; }
        public String StudentName { get; set; }
        public DateTime EnrolledDate { get; set; }
        public String Department { get; set; }
        public long PhoneNumber { get; set; }
    }
}

//ViewDetails.cshtml
@model ASP_EF_App1.Models.Student

<p>Store the below Student data.</p><br />
<p>StudentName = "@Model.StudentName"</p><br />
<p>Department = "@Model.Department"</p><br />
<p>PhoneNumber = @Model.PhoneNumber</p><br />
<p>EnrolledDate = @Model.EnrolledDate.ToString("dd-MM-yyyy")</p>

------------------------------------------------------------------------------

Ex 6-4 Entity Framework Integration With ASP - POST

//Project.cs
//THIS IS FOR REFERENCE ONLY. YOU ARE NOT REQUIRED TO MAKE ANY CHANGES HERE
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace ASP_EF_App1.Models
{
    public class Project
    {
        public int ProjectId { get; set; }
        public String ProjectName { get; set; }
        public String Platform { get; set; }
        public String Client { get; set; }
        public int Duration { get; set; }
    }
}

//ProjectController.cs
using ASP_EF_App1.DAL;
using ASP_EF_App1.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace ASP_EF_App1.Controllers      //DO NOT change the namespace name
{
    public class ProjectController : Controller //DO NOT change the class name
    {
        // Implement 'ProjectDetail' action
        public ActionResult ProjectDetail(){
        return View("AddProjectDetails", new Project());    
        }
        
       // Implement 'ProjectDetail' action with HttpPost
       [HttpPost]
       public ActionResult ProjectDetail(Project project){
           ProjectContext context = new ProjectContext();
           context.Projects.Add(project);
           context.SaveChanges();
           return View("ViewProjectDetails",project);
       }
    
    }
}

//ProjectContext.cs
using ASP_EF_App1.Models;
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Web;

namespace ASP_EF_App1.DAL        //DO NOT change the namespace name
{
    public class ProjectContext : DbContext        //DO NOT change the class name
    {

        public ProjectContext() : base("ProjectDB")   //DO NOT change the context name
        {


        }
        //Implement property for 'Projects' with required declaration
        public DbSet<Project> Projects {get; set;}
    }
}

//AddProjectDetails.cshtml
@model ASP_EF_App1.Models.Project


<form action="/Project/ProjectDetail" method="post">
    <p>
        ProjectName<input type="text" id="ProjectName" name="ProjectName" value=@Model.ProjectName />
        Platform<input type="text" name="Platform" value=@Model.Platform />
        Client<input type="text" name="Client" value=@Model.Client />
        ProjectName<input type="text" name="Duration" value=@Model.Duration />
        <input type="submit" id="submit" value="Submit" />
    </p>
</form>

//ViewProjectDetails.cshtml
@model ASP_EF_App1.Models.Project

<table >
    <tr>
        <td>ProjectId</td>
        <td>@Model.ProjectId</td>
    </tr>
    <tr>
        <td>ProjectName</td>
        <td>@Model.ProjectName</td>
    </tr>
    <tr>
        <td>Platform</td>
        <td>@Model.Platform</td>
    </tr>
    <tr>
        <td>Client</td>
        <td>@Model.Client</td>
    </tr>
    <tr>
        <td>Duration</td>
        <td>@Model.Duration</td>
    </tr>
</table>